<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>LeiG</title><link href="/" rel="alternate"></link><link href="/feeds/backend.atom.xml" rel="self"></link><id>/</id><updated>2016-01-17T22:00:00-08:00</updated><entry><title>手把手教你在SAE上部署及开发微信公众平台</title><link href="/deploy-wechat-platform-on-sae.html" rel="alternate"></link><updated>2016-01-17T22:00:00-08:00</updated><author><name>Lei Gong</name></author><id>tag:,2016-01-17:deploy-wechat-platform-on-sae.html</id><summary type="html">&lt;p&gt;微信公众平台为大家提供了一个优秀的流量入口，可惜目前自带的功能还十分有限，不过幸运的是它有相对成熟的API开发环境，给了我们搭建自己的消息处理服务器的机会。针对特定的用户，定制的消息处理和回复能够更加灵活和高效。本文将通过搭建一个公众号“Coco贴心美代”（需要代购的朋友们可以加哦，美女代购绝对靠谱），手把手教你如何在SAE（新浪的云平台）上部署基于Python Flask框架的消息服务器。目前，该公众号的主要功能是帮助用户查询快递状态（通过输入单号的形式），但整个框架非常容易扩展，可以说机会无限。&lt;/p&gt;
&lt;h2&gt;在SAE上创建空白Python应用&lt;/h2&gt;
&lt;p&gt;首先，我们自然需要注册一个SAE的账号（需要通过新浪的身份验证，一般2~3天，不然会无法进行下面一步的微信验证），然后在“控制台 -&amp;gt; 云应用SAE”下面点击“创建新应用”，输入你想创建的应用名及二级域名（比如 http://coco1888888.applinzi.com ），并选择Python2.7的空应用。整个过程还算是比较简单，可以一气呵成。&lt;/p&gt;
&lt;p&gt;SAE目前提供了三种代码管理的方式，即git，svn和代码打包上传，注意这个选项是不可更改的，所以还请慎重。作为世界上最大的程序员同性交友社区（ http://www.github.com ）的用户，我自然选择git作为代码管理的工具。除了代码打包上传，其余两种方式我认为都非常简单，选择纯凭个人喜好，并不强求。&lt;/p&gt;
&lt;p&gt;选择了git以后，你只需要在本地建立一个开发目录，创建两个配置文件，然后添加一个远程仓库sae就可以啦。详细的文档可以查看&lt;a href="http://www.sinacloud.com/doc/sae/python/index.html"&gt;SAE Python指南&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; coco
$ git init
$ touch config.yaml index.wsgi
$ git add .
$ git commit -m &lt;span class="s2"&gt;&amp;quot;initial commit&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这些都算是常规的git初始化步骤，唯一略有不同的是添加远程仓库sae。我特意把代码分开，以防你错过关键步骤。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ git remote add sae https://git.sinacloud.com/coco1888888/
$ git push sae master:1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此处还需要注意一点，SAE是允许一个应用的不同版本号同时运行的，&lt;code&gt;master:1&lt;/code&gt;即表明这是第一个版本，那自然你也可以部署第二个版本，通过命令&lt;code&gt;git push sae master:2&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;到此为止，SAE上的准备工作就做好啦，现在让我们开始开发微信公众号的消息处理吧。&lt;/p&gt;
&lt;h2&gt;申请微信公众平台&lt;/h2&gt;
&lt;p&gt;当然，你首先需要申请一个微信公众号。现在微信公众号分两大类，即订阅号和服务号。作为个人，没有什么特殊要求（比如支付）的话，比较容易的是申请一个订阅号，只需要几天时间审核就可以了。在这个等待期间，刚好可以阅读下微信的&lt;a href="http://mp.weixin.qq.com/wiki/home/index.html"&gt;开发者文档&lt;/a&gt;，对大概的接口情况有些了解。&lt;/p&gt;
&lt;p&gt;审核完毕以后，我们需要改变一些基本配置，并开启开发模式。具体操作如下：进入基本配置 -&amp;gt; 修改配置 -&amp;gt; 填URL（服务器地址）：http://coco1888888.applinzi.com/wechat （注意我在开始申请的SAE路径下加了一个子路径&lt;code&gt;/wechat&lt;/code&gt;专门服务微信平台，这样为以后另外建立主页留下了空间）-&amp;gt; Token: coco1888888 （用于接口验证，需要先进行下一步，即验证微信平台接口，不然会提示错误）-&amp;gt; 设置秘钥和加密方式 -&amp;gt; 开启开发模式。&lt;/p&gt;
&lt;h2&gt;验证微信公众平台接口&lt;/h2&gt;
&lt;p&gt;为了和微信顺利对接来开启开发模式，我们需要处理微信服务器的验证消息。微信会发送一条HTTP GET请求来对URL进行验证，GET请求携带四个参数&lt;code&gt;signature&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;, &lt;code&gt;nonce&lt;/code&gt;, &lt;code&gt;echostr&lt;/code&gt;（详情请戳&lt;a href="http://mp.weixin.qq.com/wiki/8/f9a0b8382e0b77d87b3bcc1ce6fbc104.html"&gt;官方指南&lt;/a&gt;）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;加密/校验流程：
1. 将token, timestamp, nonce三个参数进行字典序排序
2. 将三个参数字符串拼接成一个字符串进行sha1加密
3. 开发者获得加密后的字符串可与signature对比，标识该请求来源于微信
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下面贴一段我用Python Flask写的示例。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;hashlib&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;access_verification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;coco1888888&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;
    &lt;span class="n"&gt;signature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;signature&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;nonce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nonce&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nonce&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hash_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hash_str&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;signature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/wechat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wechat_auth&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;echostr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;echostr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;access_verification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;echostr&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echostr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Access Verification Failed&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;非常简单的一段代码，注意我把微信的接口放在了子路径&lt;code&gt;/wechat&lt;/code&gt;下。这是为了以后这个消息处理服务和整个网页端放在一个路径下。&lt;/p&gt;
&lt;p&gt;除了接口验证，我们还需要把&lt;code&gt;config.yaml&lt;/code&gt;和&lt;code&gt;index.wsgi&lt;/code&gt;按照如下设置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.yaml&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;coco1888888&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;index.wsgi&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sae&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;coco&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;append&lt;/span&gt;

&lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sae&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_wsgi_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样总算大功告成，微信能够验证URL，我们也能够开启开发模式啦。&lt;/p&gt;
&lt;h2&gt;消息推送和回复&lt;/h2&gt;
&lt;p&gt;准备工作总算结束，下面我们将进入核心内容，也就是消息推送和回复用户的发送的消息。这个地方主要是分两个方向：
1. 接受事件推送并回复
2. 接受普通消息并回复&lt;/p&gt;
&lt;h3&gt;接受事件推送并回复&lt;/h3&gt;
&lt;p&gt;这里我们主要考虑当用户关注订阅号时，我们推送一条“欢迎订阅”的问候和订阅号的使用规则。具体收到微信推送的xml数据包会是下面这种格式的，注意这里的&lt;code&gt;MsgType = event&lt;/code&gt;以及&lt;code&gt;event = subscribe&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ToUserName&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[toUser]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ToUserName&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;FromUserName&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[FromUser]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/FromUserName&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;CreateTime&amp;gt;&lt;/span&gt;123456789&lt;span class="nt"&gt;&amp;lt;/CreateTime&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;MsgType&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[event]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/MsgType&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Event&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[subscribe]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Event&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/xml&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;接受普通消息并回复&lt;/h3&gt;
&lt;p&gt;按照我们第一个版本的设计，用户发送一个tracking number给订阅号后，将获得快递状态的更新。这里自然涉及到一个网络爬虫的问题，不过因为不是本文重点，就不在此展开了。我们需要关注的是用户发送消息，以及订阅号回复消息的xml数据包格式，注意这里的&lt;code&gt;MsgType = text&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接受文本消息&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ToUserName&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[toUser]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ToUserName&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;FromUserName&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[fromUser]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/FromUserName&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;CreateTime&amp;gt;&lt;/span&gt;1348831860&lt;span class="nt"&gt;&amp;lt;/CreateTime&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;MsgType&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[text]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/MsgType&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Content&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[this is a test]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Content&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;MsgId&amp;gt;&lt;/span&gt;1234567890123456&lt;span class="nt"&gt;&amp;lt;/MsgId&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/xml&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;回复文本消息&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;xml&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ToUserName&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[toUser]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/ToUserName&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;FromUserName&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[fromUser]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/FromUserName&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;CreateTime&amp;gt;&lt;/span&gt;12345678&lt;span class="nt"&gt;&amp;lt;/CreateTime&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;MsgType&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[text]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/MsgType&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Content&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[你好]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/Content&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/xml&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;无论是推送消息还是普通消息，我们都需要对微信发来的xml数据包进行处理。我们可以通过一个&lt;code&gt;message_parser&lt;/code&gt;函数来实现从xml数据包到Python dict的转换。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xml.etree.ElementTree&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;ET&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;message_parser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;child&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;把现在手头上的东西整合起来，我们就有了一个可以和用户互动的订阅号啦（注意下面有一个函数&lt;code&gt;get_reply&lt;/code&gt;是缺失的，这是因为涉及到business logic，你可以用任何的字符串来替代）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/wechat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wechat_auth&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;echostr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;echostr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;access_verification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;echostr&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;echostr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Access Verification Failed&amp;#39;&lt;/span&gt;

    &lt;span class="c1"&gt;# get data and respond&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message_parser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MsgType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response_text_msg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MsgType&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Event&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;subscribe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response_text_msg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUBSCRIBE_MESSAGE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Message Response Failed&amp;quot;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;response_text_msg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;text_template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
    &lt;span class="s2"&gt;&amp;quot;&amp;lt;xml&amp;gt;&amp;quot;&lt;/span&gt;\
    &lt;span class="s2"&gt;&amp;quot;&amp;lt;ToUserName&amp;gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]]&amp;gt;&amp;lt;/ToUserName&amp;gt;&amp;quot;&lt;/span&gt;\
    &lt;span class="s2"&gt;&amp;quot;&amp;lt;FromUserName&amp;gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]]&amp;gt;&amp;lt;/FromUserName&amp;gt;&amp;quot;&lt;/span&gt;\
    &lt;span class="s2"&gt;&amp;quot;&amp;lt;CreateTime&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/CreateTime&amp;gt;&amp;quot;&lt;/span&gt;\
    &lt;span class="s2"&gt;&amp;quot;&amp;lt;MsgType&amp;gt;&amp;lt;![CDATA[text]]&amp;gt;&amp;lt;/MsgType&amp;gt;&amp;quot;&lt;/span&gt;\
    &lt;span class="s2"&gt;&amp;quot;&amp;lt;Content&amp;gt;&amp;lt;![CDATA[&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;]]&amp;gt;&amp;lt;/Content&amp;gt;&amp;quot;&lt;/span&gt;\
    &lt;span class="s2"&gt;&amp;quot;&amp;lt;/xml&amp;gt;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;receiver_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FromUserName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;sender_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ToUserName&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;create_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;text_template&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;receiver_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                 &lt;span class="n"&gt;sender_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                 &lt;span class="n"&gt;create_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                 &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;application/xml&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;我们以一个订阅号“Coco贴心美代”为例，简单讲解了下如何用Python Flask框架在SAE上搭建微信公众号平台。本文略去了一些具体步骤，但整体上包括了所有部署和开发公众号的重要步骤，希望能帮助到有同样需要的朋友。最后依然厚颜无耻的打个广告，请去关注“Coco贴心美代”，绝对靠谱的美国代购！&lt;/p&gt;</summary><category term="python"></category><category term="flask"></category><category term="git"></category><category term="sae"></category><category term="wechat"></category></entry></feed>